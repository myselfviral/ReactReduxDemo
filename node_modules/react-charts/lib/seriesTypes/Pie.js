'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Context = require('../utils/Context');

var _Selectors = require('../utils/Selectors');

var _Selectors2 = _interopRequireDefault(_Selectors);

var _Utils = require('../utils/Utils');

var _Utils2 = _interopRequireDefault(_Utils);

var _interactionMethods = require('../utils/interactionMethods');

var _Path = require('../primitives/Path');

var _Path2 = _interopRequireDefault(_Path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//


var Pie = function (_React$PureComponent) {
  _inherits(Pie, _React$PureComponent);

  function Pie(props) {
    _classCallCheck(this, Pie);

    var _this = _possibleConstructorReturn(this, (Pie.__proto__ || Object.getPrototypeOf(Pie)).call(this, props));

    if (!props.interaction) {
      _this.props.dispatch(function (state) {
        return _extends({}, state, {
          interaction: 'element'
        });
      });
    }
    _this.props.dispatch(function (state) {
      return _extends({}, state, {
        hoverMode: 'radial'
      });
    });
    _this.selectSeries = _interactionMethods.selectSeries.bind(_this);
    _this.hoverSeries = _interactionMethods.hoverSeries.bind(_this);
    _this.selectDatum = _interactionMethods.selectDatum.bind(_this);
    _this.hoverDatum = _interactionMethods.hoverDatum.bind(_this);
    return _this;
  }

  _createClass(Pie, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          series = _props.series,
          selected = _props.selected,
          hovered = _props.hovered,
          interaction = _props.interaction,
          primaryAxes = _props.primaryAxes;


      if (!primaryAxes.length) {
        return;
      }

      var style = series.getStatusStyle(_Utils2.default.getStatus(series, hovered, selected));

      var primaryAxis = primaryAxes[0];

      var interactiveSeries = interaction === 'series';
      var seriesInteractionProps = interactiveSeries ? {
        onClick: function onClick() {
          return _this2.selectSeries(series);
        },
        onMouseEnter: function onMouseEnter() {
          return _this2.hoverSeries(series);
        },
        onMouseMove: function onMouseMove() {
          return _this2.hoverSeries(series);
        },
        onMouseLeave: function onMouseLeave() {
          return _this2.hoverSeries(null);
        }
      } : {};

      return _react2.default.createElement(
        'g',
        {
          style: {
            transform: 'translate3d(' + primaryAxis.width / 2 + 'px, ' + primaryAxis.height / 2 + 'px, 0)'
          }
        },
        series.datums.map(function (datum, i) {
          var dataStyle = datum.getStatusStyle(_Utils2.default.getStatus(datum, hovered, selected));

          var interactiveDatum = interaction === 'element';
          var datumInteractionProps = interactiveDatum ? {
            onClick: function onClick() {
              return _this2.selectDatum(datum);
            },
            onMouseEnter: function onMouseEnter() {
              return _this2.hoverDatum(datum);
            },
            onMouseMove: function onMouseMove() {
              return _this2.hoverDatum(datum);
            },
            onMouseLeave: function onMouseLeave() {
              return _this2.hoverDatum(null);
            }
          } : {};

          return _react2.default.createElement(_Path2.default, _extends({
            key: i,
            d: datum.arc(),
            style: _extends({}, style, style.arc, dataStyle, dataStyle.arc, {
              pointerEvents: interactiveDatum ? 'all' : 'none'
            })
          }, seriesInteractionProps, datumInteractionProps));
        })
      );
    }
  }]);

  return Pie;
}(_react2.default.PureComponent);

Pie.defaultProps = {
  showPoints: true
};

Pie.plotDatum = function (datum, _ref) {
  var primaryAxis = _ref.primaryAxis;

  // Decorate the datum with the scale info
  datum = _extends({}, datum, primaryAxis.scale(datum), {
    defined: _Utils2.default.isValidPoint(datum.xValue) && _Utils2.default.isValidPoint(datum.yValue)

    // Set the focus point
  });datum.focus = { x: datum.x, y: datum.y

    // Set the pointer points (used in voronoi)
  };datum.pointerPoints = [datum.focus];

  // Return the new datum
  return datum;
};

Pie.buildStyles = function (series, _ref2) {
  var getStyles = _ref2.getStyles,
      getDatumStyles = _ref2.getDatumStyles,
      defaultColors = _ref2.defaultColors;

  series.getStatusStyle = function (status) {
    series.style = _Utils2.default.getStatusStyle(series, status, getStyles);
    return series.style;
  };

  // We also need to decorate each datum in the same fashion
  series.datums.forEach(function (datum) {
    datum.getStatusStyle = function (status) {
      datum.style = _Utils2.default.getStatusStyle(datum, status, getDatumStyles, {
        color: defaultColors[datum.index % (defaultColors.length - 1)]
      });
      return datum.style;
    };
  });
};

exports.default = (0, _Context.ChartConnect)(function () {
  var selectors = {
    primaryAxes: _Selectors2.default.primaryAxes()
  };
  return function (state) {
    return {
      primaryAxes: selectors.primaryAxes(state),
      hovered: state.hovered,
      selected: state.selected,
      interaction: state.interaction
    };
  };
})(Pie);